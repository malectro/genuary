{"mappings":"AAGA,MAAMA,EAASC,SAASC,cAAc,UAChCC,EAAMH,EAAOI,WAAW,MAE9BH,SAASI,KAAKC,YAAYN,GAC1BC,SAASI,KAAKE,MAAMC,gBAAkB,QAEtC,MAGMC,EAAaC,OAAOC,iBAC1BX,EAAOY,MAJO,IAISH,EACvBT,EAAOa,OAJQ,GAIUJ,EACzBT,EAAOO,MAAMK,MAAQE,QACrBd,EAAOO,MAAMM,OAASE,OAItB,MAAMC,EAAUhB,EAAOY,MAAQ,EACzBK,EAAUjB,EAAOa,OAAS,EAC1BK,EAAWC,KAAKC,KAAKJ,EAAUA,EAAUC,EAAUA,GA4BzDI,gCA3BSC,EAAQC,GACfF,sBAAsBC,GAEtB,MAAME,EAAWD,EAAO,IAElBE,EAAYtB,EAAIuB,aAAa,EAAG,EAAG1B,EAAOY,MAAOZ,EAAOa,QACxDc,EAASF,EAAUG,KAEzB,IAAK,IAAIC,EAAI,EAAGA,EAAI7B,EAAOY,MAAOiB,IAChC,IAAK,IAAIC,EAAI,EAAGA,EAAI9B,EAAOa,OAAQiB,IAAK,CACtC,IAAIC,EAA6B,GAAxBD,EAAI9B,EAAOY,MAAQiB,GACxBG,EAAKb,KAAKc,IAAIJ,EAAIb,GAClBkB,EAAKf,KAAKc,IAAIH,EAAIb,GAClBkB,GAAcH,EAAKb,KAAKc,IAAIH,EAAIb,KAAaD,EAAUC,GAC3DkB,EAAahB,KAAKC,KAAKY,EAAKA,EAAKE,EAAKA,GAAMhB,EAC5C,IAAIkB,EAAIJ,GAAM,EAAiB,KAAbG,GAClB,MAAME,EAAS,EAAIF,EACnBR,EAAOI,EAAI,GAAKM,EAAQlB,KAAKmB,OAAOnB,KAAKoB,IAAIH,EAAIA,EAAIZ,GAAY,GAAK,GAAK,IAC3EG,EAAOI,EAAI,GAAKM,EAAQlB,KAAKmB,OAAOnB,KAAKqB,IAAIJ,EAAIA,EAAIZ,GAAY,GAAK,GAAK,IAC3EG,EAAOI,EAAI,GAAK,IAKpB5B,EAAIsC,aAAahB,EAAW,EAAG,MAKjC,IAAIiB,GAAc,EAClB,MAAMC,EAAe1C,SAASC,cAAc,UAC5CyC,EAAaC,UAAY,SACzB3C,SAASI,KAAKC,YAAYqC,GAE1B,MAAME,EAAgB,IAAIC,cAAc9C,EAAO+C,cAAc,IAAK,CAChEC,SAAU,eAGZ,IAAIC,EAAS,GACbJ,EAAcK,iBAAiB,iBAAkBC,IAC/CF,EAAOG,KAAKD,EAAMvB,SAGpBiB,EAAcK,iBAAiB,QAASC,IACtC,MAAME,EAAO,IAAIC,KAAKL,EAAQ,CAACM,KAAM,KACrCN,EAAS,GAETvC,OACG8C,mBAAmB,CAClBC,cAAe,QACfC,MAAO,CAAC,CAACC,OAAQ,CAAC,aAAc,CAAC,cAElCC,MAAIC,MAAQC,IACXC,QAAQC,IAAI,KAAMF,GAElB,MAAMG,QAAeH,EAAWI,iBAChCD,EAAOE,MAAMd,GACbY,EAAOG,WACR,YAKLzB,EAAaO,iBAAiB,SAAO,KAC/BR,GACFA,GAAc,EACdG,EAAcwB,OACd1B,EAAaC,UAAY,WAEzBF,GAAc,EACdG,EAAcyB,QACd3B,EAAaC,UAAY","sources":["src/app.js"],"sourcesContent":["//import { getOriginPrivateDirectory } from 'https://cdn.jsdelivr.net/npm/native-file-system-adapter/mod.js';\n//const {getOriginPrivateDirectory} = await import('https://cdn.jsdelivr.net/npm/native-file-system-adapter/mod.js');\n\nconst canvas = document.createElement('canvas');\nconst ctx = canvas.getContext('2d');\n\ndocument.body.appendChild(canvas);\ndocument.body.style.backgroundColor = 'black';\n\nconst width = 800;\nconst height = 80;\n\nconst pixelRatio = window.devicePixelRatio;\ncanvas.width = width * pixelRatio;\ncanvas.height = height * pixelRatio;\ncanvas.style.width = width + 'px';\ncanvas.style.height = height + 'px';\n\n//canvas.style.backgroundColor = 'blue';\n\nconst horizon = canvas.width / 2;\nconst yCenter = canvas.height / 2;\nconst diagonal = Math.sqrt(horizon * horizon + yCenter * yCenter);\nfunction animate(time) {\n  requestAnimationFrame(animate);\n\n  const slowTime = time / 1_000;\n\n  const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  const pixels = imageData.data;\n\n  for (let x = 0; x < canvas.width; x++) {\n    for (let y = 0; y < canvas.height; y++) {\n      let i = (y * canvas.width + x) * 4;\n      let xd = Math.abs(x - horizon);\n      let yd = Math.abs(y - yCenter);\n      let distortion = (xd + Math.abs(y - yCenter)) / (horizon + yCenter);\n      distortion = Math.sqrt(xd * xd + yd * yd) / diagonal;\n      let d = xd * (1 - distortion * 0.0001);\n      const alpha = (1 - distortion);\n      pixels[i + 0] = alpha * Math.round((Math.sin(d * d + slowTime) + 1) / 2) * 255;\n      pixels[i + 1] = alpha * Math.round((Math.cos(d * d + slowTime) + 1) / 2) * 255;\n      pixels[i + 3] = 255;\n      //pixels[i + 3] = (1 - distortion) * 255;\n    }\n  }\n\n  ctx.putImageData(imageData, 0, 0);\n}\n\nrequestAnimationFrame(animate);\n\nlet isRecording = false;\nconst recordButton = document.createElement('button');\nrecordButton.innerText = 'Record';\ndocument.body.appendChild(recordButton);\n\nconst mediaRecorder = new MediaRecorder(canvas.captureStream(30), {\n  mimeType: 'video/webm',\n});\n\nlet chunks = [];\nmediaRecorder.addEventListener('dataavailable', (event) => {\n  chunks.push(event.data);\n});\n\nmediaRecorder.addEventListener('stop', (event) => {\n  const blob = new Blob(chunks, {type: ''});\n  chunks = [];\n\n  window\n    .showSaveFilePicker({\n      suggestedName: 'video',\n      types: [{accept: {'video/webm': ['.webm']}}],\n    })\n    .then(async (fileSystem) => {\n      console.log('hi', fileSystem);\n\n      const stream = await fileSystem.createWritable();\n      stream.write(blob);\n      stream.close();\n    }, () => {\n      // abort\n    });\n});\n\nrecordButton.addEventListener('click', () => {\n  if (isRecording) {\n    isRecording = false;\n    mediaRecorder.stop();\n    recordButton.innerText = 'Record';\n  } else {\n    isRecording = true;\n    mediaRecorder.start();\n    recordButton.innerText = 'Stop';\n  }\n});\n\nfunction wait(ms) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n}\n"],"names":["$c8eaf4acd6fbca2f$var$canvas","document","createElement","$c8eaf4acd6fbca2f$var$ctx","getContext","body","appendChild","style","backgroundColor","$c8eaf4acd6fbca2f$var$pixelRatio","window","devicePixelRatio","width","height","$c8eaf4acd6fbca2f$var$width","$c8eaf4acd6fbca2f$var$height","$c8eaf4acd6fbca2f$var$horizon","$c8eaf4acd6fbca2f$var$yCenter","$c8eaf4acd6fbca2f$var$diagonal","Math","sqrt","requestAnimationFrame","$c8eaf4acd6fbca2f$var$animate","time","slowTime","imageData","getImageData","pixels","data","x","y","i","xd","abs","yd","distortion","d","alpha","round","sin","cos","putImageData","$c8eaf4acd6fbca2f$var$isRecording","$c8eaf4acd6fbca2f$var$recordButton","innerText","$c8eaf4acd6fbca2f$var$mediaRecorder","MediaRecorder","captureStream","mimeType","$c8eaf4acd6fbca2f$var$chunks","addEventListener","event","push","blob","Blob","type","showSaveFilePicker","suggestedName","types","accept","then","async","fileSystem","console","log","stream","createWritable","write","close","stop","start"],"version":3,"file":"index.6ed4f1b6.js.map"}